#pragma checksum "C:\Users\timon\source\repos\VoetbalTeamsApp\Views\LeagueTablePage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "CB01170D6191912D485B2AF578142B77F62E6447178F6F77A72C3BC4F5880DE2"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VoetbalTeamsApp.Views
{
    partial class LeagueTablePage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Telerik_UI_Xaml_Controls_Grid_RadDataGrid_SelectedItem(global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Telerik_UI_Xaml_Controls_Grid_RadDataGrid_ItemsSource(global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Telerik_UI_Xaml_Controls_Grid_DataGridComboBoxColumn_ItemsSource(global::Telerik.UI.Xaml.Controls.Grid.DataGridComboBoxColumn obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class LeagueTablePage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ILeagueTablePage_Bindings
        {
            private global::VoetbalTeamsApp.Views.LeagueTablePage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.RelativePanel obj2;
            private global::Windows.UI.Xaml.Controls.RelativePanel obj3;
            private global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid obj6;
            private global::Telerik.UI.Xaml.Controls.Grid.DataGridComboBoxColumn obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.TextBox obj9;
            private global::Windows.UI.Xaml.Controls.TextBox obj10;
            private global::Windows.UI.Xaml.Controls.TextBox obj11;
            private global::Windows.UI.Xaml.Controls.TextBox obj12;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj13;
            private global::Windows.UI.Xaml.Controls.StackPanel obj15;
            private global::System.Boolean obj15LoadDeferredValue;
            private global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid obj16;
            private global::Windows.UI.Xaml.Controls.TextBox obj17;
            private global::System.String obj17TextDeferredValue;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj18;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj19;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj20;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj21;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj22;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj13Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj18Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj19Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj20Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj21Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj22Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2VisibilityDisabled = false;
            private static bool isobj3VisibilityDisabled = false;
            private static bool isobj6ItemsSourceDisabled = false;
            private static bool isobj7ItemsSourceDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj15LoadDisabled = false;
            private static bool isobj16SelectedItemDisabled = false;
            private static bool isobj16ItemsSourceDisabled = false;
            private static bool isobj17TextDisabled = false;
            private global::System.Collections.Generic.Queue<global::System.Int32> UnloadedElementsToUpdate = new global::System.Collections.Generic.Queue<global::System.Int32>();

            private LeagueTablePage_obj1_BindingsTracking bindingsTracking;

            public LeagueTablePage_obj1_Bindings()
            {
                this.bindingsTracking = new LeagueTablePage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 16 && columnNumber == 24)
                {
                    isobj2VisibilityDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 24)
                {
                    isobj3VisibilityDisabled = true;
                }
                else if (lineNumber == 135 && columnNumber == 17)
                {
                    isobj6ItemsSourceDisabled = true;
                }
                else if (lineNumber == 142 && columnNumber == 81)
                {
                    isobj7ItemsSourceDisabled = true;
                }
                else if (lineNumber == 98 && columnNumber == 28)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 22)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 111 && columnNumber == 22)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 117 && columnNumber == 22)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 122 && columnNumber == 22)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 93 && columnNumber == 21)
                {
                    this.obj13.Click -= obj13Click;
                }
                else if (lineNumber == 37 && columnNumber == 21)
                {
                    isobj15LoadDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 25)
                {
                    isobj16SelectedItemDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 25)
                {
                    isobj16ItemsSourceDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 26)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 25)
                {
                    this.obj18.Click -= obj18Click;
                }
                else if (lineNumber == 53 && columnNumber == 25)
                {
                    this.obj19.Click -= obj19Click;
                }
                else if (lineNumber == 20 && columnNumber == 25)
                {
                    this.obj20.Click -= obj20Click;
                }
                else if (lineNumber == 24 && columnNumber == 25)
                {
                    this.obj21.Click -= obj21Click;
                }
                else if (lineNumber == 29 && columnNumber == 25)
                {
                    this.obj22.Click -= obj22Click;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\LeagueTablePage.xaml line 16
                        this.obj2 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                        if (!this.UnloadedElementsToUpdate.Contains(15))
                        {
                            this.UnloadedElementsToUpdate.Enqueue(15);
                        }
                        break;
                    case 3: // Views\LeagueTablePage.xaml line 90
                        this.obj3 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                        break;
                    case 6: // Views\LeagueTablePage.xaml line 124
                        this.obj6 = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)target;
                        break;
                    case 7: // Views\LeagueTablePage.xaml line 142
                        this.obj7 = (global::Telerik.UI.Xaml.Controls.Grid.DataGridComboBoxColumn)target;
                        break;
                    case 8: // Views\LeagueTablePage.xaml line 98
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // Views\LeagueTablePage.xaml line 100
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Views\LeagueTablePage.xaml line 106
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Views\LeagueTablePage.xaml line 112
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 12: // Views\LeagueTablePage.xaml line 118
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Views\LeagueTablePage.xaml line 92
                        this.obj13 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj13Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GoBackAsync();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj13Click;
                        break;
                    case 15: // Views\LeagueTablePage.xaml line 34
                        this.obj15 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 16: // Views\LeagueTablePage.xaml line 56
                        this.obj16 = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)target;
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    case 17: // Views\LeagueTablePage.xaml line 40
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        // Views\LeagueTablePage.xaml line 40
                        if (!isobj17TextDisabled)
                        {
                            if (this.obj17 != null)
                            {
                                XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj17, this.obj17TextDeferredValue, null);
                            }
                        }
                        this.bindingsTracking.RegisterTwoWayListener_17(this.obj17);
                        break;
                    case 18: // Views\LeagueTablePage.xaml line 47
                        this.obj18 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj18Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.SaveNewClubAsync();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj18Click;
                        break;
                    case 19: // Views\LeagueTablePage.xaml line 51
                        this.obj19 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj19Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.CancelNewClubAsync();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj19Click;
                        break;
                    case 20: // Views\LeagueTablePage.xaml line 19
                        this.obj20 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj20Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.CreateNewClubAsync();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj20Click;
                        break;
                    case 21: // Views\LeagueTablePage.xaml line 23
                        this.obj21 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj21Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteClubAsync();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj21Click;
                        break;
                    case 22: // Views\LeagueTablePage.xaml line 28
                        this.obj22 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj22Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ShowClubAsync();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj22Click;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ILeagueTablePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                switch (connectionId)
                {
                    case 15: // Views\LeagueTablePage.xaml line 34
                    {
                        if (this.obj15 != null)
                        {
                            this.obj15 = null;
                        }
                        this.DisconnectUnloadedObject(17);
                        this.DisconnectUnloadedObject(18);
                        this.DisconnectUnloadedObject(19);
                        break;
                    }
                    case 17: // Views\LeagueTablePage.xaml line 40
                    {
                        if (this.obj17 != null)
                        {
                            this.obj17TextDeferredValue = this.obj17.Text;
                            this.obj17 = null;
                        }
                        break;
                    }
                    case 18: // Views\LeagueTablePage.xaml line 47
                    {
                        if (this.obj18 != null)
                        {
                            this.obj18 = null;
                        }
                        break;
                    }
                    case 19: // Views\LeagueTablePage.xaml line 51
                    {
                        if (this.obj19 != null)
                        {
                            this.obj19 = null;
                        }
                        break;
                    }
                    default:
                    {
                        throw new global::System.ArgumentException("Invalid connectionId.");
                    }
                }
            }

            private void UpdateUnloadedElement(int connectionId)
            {
                switch (connectionId)
                {
                    case 15: // Views\LeagueTablePage.xaml line 34
                    {
                        // Views\LeagueTablePage.xaml line 34
                        if (!isobj15LoadDisabled)
                        {
                            if (this.obj15LoadDeferredValue)
                            {
                                dataRoot.FindName("newClubPanel");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj15);
                            }
                        }
                        break;
                    }
                    default:
                    {
                        throw new global::System.ArgumentException("Invalid connectionId.");
                    }
                }
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::VoetbalTeamsApp.Views.LeagueTablePage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            private void CompleteUpdate(int phase)
            {
                while (this.UnloadedElementsToUpdate.Count > 0)
                {
                    this.UpdateUnloadedElement(this.UnloadedElementsToUpdate.Dequeue());
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::VoetbalTeamsApp.Views.LeagueTablePage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_ViewModel(global::VoetbalTeamsApp.ViewModels.LeagueTablePageViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_GridVisibility(obj.GridVisibility, phase);
                        this.Update_ViewModel_ClubViewVisibility(obj.ClubViewVisibility, phase);
                        this.Update_ViewModel_SelectedClub(obj.SelectedClub, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Db(obj.Db, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_AddingNewClub(obj.AddingNewClub, phase);
                        this.Update_ViewModel_NewClub(obj.NewClub, phase);
                    }
                }
            }
            private void Update_ViewModel_GridVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 16
                    if (!isobj2VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj2, obj);
                    }
                }
            }
            private void Update_ViewModel_ClubViewVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 90
                    if (!isobj3VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, obj);
                    }
                }
            }
            private void Update_ViewModel_SelectedClub(global::VoetbalTeamsApp.Models.Club obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedClub(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedClub_Players(obj.Players, phase);
                        this.Update_ViewModel_SelectedClub_Name(obj.Name, phase);
                        this.Update_ViewModel_SelectedClub_Coach(obj.Coach, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 56
                    if (!isobj16SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Telerik_UI_Xaml_Controls_Grid_RadDataGrid_SelectedItem(this.obj16, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedClub_Players(global::System.Collections.ObjectModel.ObservableCollection<global::VoetbalTeamsApp.Models.Player> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedClub_Players(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 124
                    if (!isobj6ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Telerik_UI_Xaml_Controls_Grid_RadDataGrid_ItemsSource(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Db(global::VoetbalTeamsApp.Models.DataBase obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Db_Positions(obj.Positions, phase);
                        this.Update_ViewModel_Db_ActiveClubs(obj.ActiveClubs, phase);
                    }
                }
            }
            private void Update_ViewModel_Db_Positions(global::System.Collections.ObjectModel.ObservableCollection<global::VoetbalTeamsApp.Models.Position> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LeagueTablePage.xaml line 142
                    if (!isobj7ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Telerik_UI_Xaml_Controls_Grid_DataGridComboBoxColumn_ItemsSource(this.obj7, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedClub_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 98
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedClub_Coach(global::VoetbalTeamsApp.Models.Coach obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedClub_Coach(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedClub_Coach_FirstName(obj.FirstName, phase);
                        this.Update_ViewModel_SelectedClub_Coach_LastName(obj.LastName, phase);
                        this.Update_ViewModel_SelectedClub_Coach_Age(obj.Age, phase);
                        this.Update_ViewModel_SelectedClub_Coach_Salary(obj.Salary, phase);
                    }
                }
            }
            private void Update_ViewModel_SelectedClub_Coach_FirstName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 100
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedClub_Coach_LastName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 106
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedClub_Coach_Age(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 112
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj11, obj.ToString(), null);
                    }
                }
            }
            private void Update_ViewModel_SelectedClub_Coach_Salary(global::System.Single obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 118
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj12, obj.ToString(), null);
                    }
                }
            }
            private void Update_ViewModel_AddingNewClub(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 34
                    if (!isobj15LoadDisabled)
                    {
                        this.obj15LoadDeferredValue = obj;
        
                        if (obj)
                        {
                            dataRoot.FindName("newClubPanel");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj15);
                        }
                    }
                }
            }
            private void Update_ViewModel_Db_ActiveClubs(global::System.Collections.ObjectModel.ObservableCollection<global::VoetbalTeamsApp.Models.Club> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LeagueTablePage.xaml line 56
                    if (!isobj16ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Telerik_UI_Xaml_Controls_Grid_RadDataGrid_ItemsSource(this.obj16, obj, null);
                    }
                }
            }
            private void Update_ViewModel_NewClub(global::VoetbalTeamsApp.Models.Club obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_NewClub(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_NewClub_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_ViewModel_NewClub_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LeagueTablePage.xaml line 40
                    if (!isobj17TextDisabled)
                    {
                        if (this.obj17 != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj17, obj, null);
                        }
                        else
                        {
                            this.obj17TextDeferredValue = obj;
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedClub != null)
                            {
                                if (this.dataRoot.ViewModel.SelectedClub.Coach != null)
                                {
                                    this.dataRoot.ViewModel.SelectedClub.Coach.FirstName = this.obj9.Text;
                                }
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_10_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedClub != null)
                            {
                                if (this.dataRoot.ViewModel.SelectedClub.Coach != null)
                                {
                                    this.dataRoot.ViewModel.SelectedClub.Coach.LastName = this.obj10.Text;
                                }
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_11_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedClub != null)
                            {
                                if (this.dataRoot.ViewModel.SelectedClub.Coach != null)
                                {
                                    this.dataRoot.ViewModel.SelectedClub.Coach.Age = (global::System.Int32) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Int32), this.obj11.Text);
                                }
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedClub != null)
                            {
                                if (this.dataRoot.ViewModel.SelectedClub.Coach != null)
                                {
                                    this.dataRoot.ViewModel.SelectedClub.Coach.Salary = (global::System.Single) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Single), this.obj12.Text);
                                }
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedClub = (global::VoetbalTeamsApp.Models.Club)this.obj16.SelectedItem;
                        }
                    }
                }
            }
            private void UpdateTwoWay_17_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.NewClub != null)
                            {
                                this.dataRoot.ViewModel.NewClub.Name = this.obj17.Text;
                            }
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class LeagueTablePage_obj1_BindingsTracking
            {
                private global::System.WeakReference<LeagueTablePage_obj1_Bindings> weakRefToBindingObj; 

                public LeagueTablePage_obj1_BindingsTracking(LeagueTablePage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<LeagueTablePage_obj1_Bindings>(obj);
                }

                public LeagueTablePage_obj1_Bindings TryGetBindingObject()
                {
                    LeagueTablePage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_SelectedClub(null);
                    UpdateChildListeners_ViewModel_SelectedClub_Players(null);
                    UpdateChildListeners_ViewModel_SelectedClub_Coach(null);
                    UpdateChildListeners_ViewModel_NewClub(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LeagueTablePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::VoetbalTeamsApp.ViewModels.LeagueTablePageViewModel obj = sender as global::VoetbalTeamsApp.ViewModels.LeagueTablePageViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_GridVisibility(obj.GridVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_ClubViewVisibility(obj.ClubViewVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedClub(obj.SelectedClub, DATA_CHANGED);
                                bindings.Update_ViewModel_AddingNewClub(obj.AddingNewClub, DATA_CHANGED);
                                bindings.Update_ViewModel_NewClub(obj.NewClub, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "GridVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_GridVisibility(obj.GridVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ClubViewVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ClubViewVisibility(obj.ClubViewVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedClub":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedClub(obj.SelectedClub, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AddingNewClub":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_AddingNewClub(obj.AddingNewClub, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NewClub":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_NewClub(obj.NewClub, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::VoetbalTeamsApp.ViewModels.LeagueTablePageViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::VoetbalTeamsApp.ViewModels.LeagueTablePageViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedClub(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LeagueTablePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::VoetbalTeamsApp.Models.Club obj = sender as global::VoetbalTeamsApp.Models.Club;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SelectedClub_Players(obj.Players, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedClub_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedClub_Coach(obj.Coach, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Players":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedClub_Players(obj.Players, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedClub_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Coach":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedClub_Coach(obj.Coach, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::VoetbalTeamsApp.Models.Club cache_ViewModel_SelectedClub = null;
                public void UpdateChildListeners_ViewModel_SelectedClub(global::VoetbalTeamsApp.Models.Club obj)
                {
                    if (obj != cache_ViewModel_SelectedClub)
                    {
                        if (cache_ViewModel_SelectedClub != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedClub).PropertyChanged -= PropertyChanged_ViewModel_SelectedClub;
                            cache_ViewModel_SelectedClub = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedClub = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedClub;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedClub_Players(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LeagueTablePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::VoetbalTeamsApp.Models.Player> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::VoetbalTeamsApp.Models.Player>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void CollectionChanged_ViewModel_SelectedClub_Players(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    LeagueTablePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::VoetbalTeamsApp.Models.Player> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::VoetbalTeamsApp.Models.Player>;
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::VoetbalTeamsApp.Models.Player> cache_ViewModel_SelectedClub_Players = null;
                public void UpdateChildListeners_ViewModel_SelectedClub_Players(global::System.Collections.ObjectModel.ObservableCollection<global::VoetbalTeamsApp.Models.Player> obj)
                {
                    if (obj != cache_ViewModel_SelectedClub_Players)
                    {
                        if (cache_ViewModel_SelectedClub_Players != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedClub_Players).PropertyChanged -= PropertyChanged_ViewModel_SelectedClub_Players;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_SelectedClub_Players).CollectionChanged -= CollectionChanged_ViewModel_SelectedClub_Players;
                            cache_ViewModel_SelectedClub_Players = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedClub_Players = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedClub_Players;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_SelectedClub_Players;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedClub_Coach(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LeagueTablePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::VoetbalTeamsApp.Models.Coach obj = sender as global::VoetbalTeamsApp.Models.Coach;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SelectedClub_Coach_FirstName(obj.FirstName, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedClub_Coach_LastName(obj.LastName, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedClub_Coach_Age(obj.Age, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedClub_Coach_Salary(obj.Salary, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "FirstName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedClub_Coach_FirstName(obj.FirstName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LastName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedClub_Coach_LastName(obj.LastName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Age":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedClub_Coach_Age(obj.Age, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Salary":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedClub_Coach_Salary(obj.Salary, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::VoetbalTeamsApp.Models.Coach cache_ViewModel_SelectedClub_Coach = null;
                public void UpdateChildListeners_ViewModel_SelectedClub_Coach(global::VoetbalTeamsApp.Models.Coach obj)
                {
                    if (obj != cache_ViewModel_SelectedClub_Coach)
                    {
                        if (cache_ViewModel_SelectedClub_Coach != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedClub_Coach).PropertyChanged -= PropertyChanged_ViewModel_SelectedClub_Coach;
                            cache_ViewModel_SelectedClub_Coach = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedClub_Coach = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedClub_Coach;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_NewClub(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LeagueTablePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::VoetbalTeamsApp.Models.Club obj = sender as global::VoetbalTeamsApp.Models.Club;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_NewClub_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_NewClub_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::VoetbalTeamsApp.Models.Club cache_ViewModel_NewClub = null;
                public void UpdateChildListeners_ViewModel_NewClub(global::VoetbalTeamsApp.Models.Club obj)
                {
                    if (obj != cache_ViewModel_NewClub)
                    {
                        if (cache_ViewModel_NewClub != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_NewClub).PropertyChanged -= PropertyChanged_ViewModel_NewClub;
                            cache_ViewModel_NewClub = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_NewClub = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_NewClub;
                        }
                    }
                }
                public void RegisterTwoWayListener_9(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_10(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_11(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_12(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_16(global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_SelectedItem();
                        }
                    });
                }
                public void RegisterTwoWayListener_17(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_17_Text();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 4: // Views\LeagueTablePage.xaml line 91
                {
                    this.BackBar = (global::Windows.UI.Xaml.Controls.CommandBar)(target);
                }
                break;
            case 5: // Views\LeagueTablePage.xaml line 97
                {
                    this.Club = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 6: // Views\LeagueTablePage.xaml line 124
                {
                    this.DataGrid = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)(target);
                }
                break;
            case 14: // Views\LeagueTablePage.xaml line 17
                {
                    this.commandBar = (global::Windows.UI.Xaml.Controls.CommandBar)(target);
                }
                break;
            case 15: // Views\LeagueTablePage.xaml line 34
                {
                    this.newClubPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 16: // Views\LeagueTablePage.xaml line 56
                {
                    this.grid = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// UnloadObject(DependencyObject)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        partial void UnloadObject(global::Windows.UI.Xaml.DependencyObject unloadableObject)
        {
            if (unloadableObject != null)
            {
                // Views\LeagueTablePage.xaml line 34
                if (unloadableObject == this.newClubPanel)
                { 
                    this.DisconnectUnloadedObject(15);
                }
                global::Windows.UI.Xaml.Markup.XamlMarkupHelper.UnloadObject(unloadableObject);
            }
        }

        /// <summary>
        /// DisconnectUnloadedObject(int connectionId)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void DisconnectUnloadedObject(int connectionId)
        {
            switch(connectionId)
            {
                case 15: // Views\LeagueTablePage.xaml line 34
                {
                    this.Bindings.DisconnectUnloadedObject(17);
                    this.Bindings.DisconnectUnloadedObject(15);
                    this.newClubPanel = null;
                    break;
                }
                default:
                {
                    throw new global::System.ArgumentException("Invalid connectionId.");
                }
            }
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\LeagueTablePage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    LeagueTablePage_obj1_Bindings bindings = new LeagueTablePage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

